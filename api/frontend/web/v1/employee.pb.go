// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.27.0
// source: v1/employee.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetEmptyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetEmptyRequest) Reset() {
	*x = GetEmptyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_employee_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEmptyRequest) ProtoMessage() {}

func (x *GetEmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_employee_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEmptyRequest.ProtoReflect.Descriptor instead.
func (*GetEmptyRequest) Descriptor() ([]byte, []int) {
	return file_v1_employee_proto_rawDescGZIP(), []int{0}
}

type GetBasicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page           int64   `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size           int64   `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Name           *string `protobuf:"bytes,3,opt,name=name,proto3,oneof" json:"name,omitempty"`
	PoliticId      int64   `protobuf:"varint,4,opt,name=politicId,proto3" json:"politicId,omitempty"`
	NationId       int64   `protobuf:"varint,5,opt,name=nationId,proto3" json:"nationId,omitempty"`
	JobLevelId     int64   `protobuf:"varint,6,opt,name=jobLevelId,proto3" json:"jobLevelId,omitempty"`
	PosId          int64   `protobuf:"varint,7,opt,name=posId,proto3" json:"posId,omitempty"`
	EngageForm     string  `protobuf:"bytes,8,opt,name=engageForm,proto3" json:"engageForm,omitempty"`
	DepartmentId   int64   `protobuf:"varint,9,opt,name=departmentId,proto3" json:"departmentId,omitempty"`
	BeginDateScope string  `protobuf:"bytes,10,opt,name=beginDateScope,proto3" json:"beginDateScope,omitempty"`
}

func (x *GetBasicRequest) Reset() {
	*x = GetBasicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_employee_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBasicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBasicRequest) ProtoMessage() {}

func (x *GetBasicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_employee_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBasicRequest.ProtoReflect.Descriptor instead.
func (*GetBasicRequest) Descriptor() ([]byte, []int) {
	return file_v1_employee_proto_rawDescGZIP(), []int{1}
}

func (x *GetBasicRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetBasicRequest) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GetBasicRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GetBasicRequest) GetPoliticId() int64 {
	if x != nil {
		return x.PoliticId
	}
	return 0
}

func (x *GetBasicRequest) GetNationId() int64 {
	if x != nil {
		return x.NationId
	}
	return 0
}

func (x *GetBasicRequest) GetJobLevelId() int64 {
	if x != nil {
		return x.JobLevelId
	}
	return 0
}

func (x *GetBasicRequest) GetPosId() int64 {
	if x != nil {
		return x.PosId
	}
	return 0
}

func (x *GetBasicRequest) GetEngageForm() string {
	if x != nil {
		return x.EngageForm
	}
	return ""
}

func (x *GetBasicRequest) GetDepartmentId() int64 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

func (x *GetBasicRequest) GetBeginDateScope() string {
	if x != nil {
		return x.BeginDateScope
	}
	return ""
}

type EmployeeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId         string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                          // 用户id
	WorkId         string `protobuf:"bytes,3,opt,name=work_id,json=workId,proto3" json:"work_id,omitempty"`                          // 工号
	Name           string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                                            // 员工姓名
	Gender         string `protobuf:"bytes,5,opt,name=gender,proto3" json:"gender,omitempty"`                                        // 性别
	Picture        string `protobuf:"bytes,6,opt,name=picture,proto3" json:"picture,omitempty"`                                      // 头像
	IdCard         string `protobuf:"bytes,7,opt,name=id_card,json=idCard,proto3" json:"id_card,omitempty"`                          // 身份证号
	IdCardPicture  string `protobuf:"bytes,8,opt,name=id_card_picture,json=idCardPicture,proto3" json:"id_card_picture,omitempty"`   // 身份证图片
	Wedlock        string `protobuf:"bytes,9,opt,name=wedlock,proto3" json:"wedlock,omitempty"`                                      // 婚姻状况
	NationId       int64  `protobuf:"varint,10,opt,name=nation_id,json=nationId,proto3" json:"nation_id,omitempty"`                  // 民族
	NativePlace    string `protobuf:"bytes,11,opt,name=native_place,json=nativePlace,proto3" json:"native_place,omitempty"`          // 籍贯
	PoliticId      int64  `protobuf:"varint,12,opt,name=politic_id,json=politicId,proto3" json:"politic_id,omitempty"`               // 政治面貌
	Email          string `protobuf:"bytes,13,opt,name=email,proto3" json:"email,omitempty"`                                         // 邮箱
	Phone          string `protobuf:"bytes,14,opt,name=phone,proto3" json:"phone,omitempty"`                                         // 电话号码
	Address        string `protobuf:"bytes,15,opt,name=address,proto3" json:"address,omitempty"`                                     // 联系地址
	DepartmentId   int64  `protobuf:"varint,16,opt,name=department_id,json=departmentId,proto3" json:"department_id,omitempty"`      // 所属部门
	JobLevelId     int64  `protobuf:"varint,17,opt,name=job_level_id,json=jobLevelId,proto3" json:"job_level_id,omitempty"`          // 职称ID
	PosId          int64  `protobuf:"varint,18,opt,name=pos_id,json=posId,proto3" json:"pos_id,omitempty"`                           // 职位ID
	EngageForm     string `protobuf:"bytes,19,opt,name=engage_form,json=engageForm,proto3" json:"engage_form,omitempty"`             // 聘用形式
	TiptopDegree   string `protobuf:"bytes,20,opt,name=tiptop_degree,json=tiptopDegree,proto3" json:"tiptop_degree,omitempty"`       // 最高学历
	Specialty      string `protobuf:"bytes,21,opt,name=specialty,proto3" json:"specialty,omitempty"`                                 // 所属专业
	School         string `protobuf:"bytes,22,opt,name=school,proto3" json:"school,omitempty"`                                       // 毕业院校
	BeginDate      string `protobuf:"bytes,23,opt,name=begin_date,json=beginDate,proto3" json:"begin_date,omitempty"`                // 入职日期
	NotWorkDate    string `protobuf:"bytes,24,opt,name=not_work_date,json=notWorkDate,proto3" json:"not_work_date,omitempty"`        // 离职日期
	WorkStatus     int32  `protobuf:"varint,25,opt,name=work_status,json=workStatus,proto3" json:"work_status,omitempty"`            // 在职状态
	ContractTerm   int32  `protobuf:"varint,26,opt,name=contract_term,json=contractTerm,proto3" json:"contract_term,omitempty"`      // 合同期限
	ConversionTime string `protobuf:"bytes,27,opt,name=conversion_time,json=conversionTime,proto3" json:"conversion_time,omitempty"` // 转正日期
	BeginContract  string `protobuf:"bytes,28,opt,name=begin_contract,json=beginContract,proto3" json:"begin_contract,omitempty"`    // 合同起始日期
	EndContract    string `protobuf:"bytes,29,opt,name=end_contract,json=endContract,proto3" json:"end_contract,omitempty"`          // 合同终止日期
	WorkAge        int32  `protobuf:"varint,30,opt,name=work_age,json=workAge,proto3" json:"work_age,omitempty"`                     // 工龄
}

func (x *EmployeeData) Reset() {
	*x = EmployeeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_employee_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmployeeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmployeeData) ProtoMessage() {}

func (x *EmployeeData) ProtoReflect() protoreflect.Message {
	mi := &file_v1_employee_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmployeeData.ProtoReflect.Descriptor instead.
func (*EmployeeData) Descriptor() ([]byte, []int) {
	return file_v1_employee_proto_rawDescGZIP(), []int{2}
}

func (x *EmployeeData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EmployeeData) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *EmployeeData) GetWorkId() string {
	if x != nil {
		return x.WorkId
	}
	return ""
}

func (x *EmployeeData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EmployeeData) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *EmployeeData) GetPicture() string {
	if x != nil {
		return x.Picture
	}
	return ""
}

func (x *EmployeeData) GetIdCard() string {
	if x != nil {
		return x.IdCard
	}
	return ""
}

func (x *EmployeeData) GetIdCardPicture() string {
	if x != nil {
		return x.IdCardPicture
	}
	return ""
}

func (x *EmployeeData) GetWedlock() string {
	if x != nil {
		return x.Wedlock
	}
	return ""
}

func (x *EmployeeData) GetNationId() int64 {
	if x != nil {
		return x.NationId
	}
	return 0
}

func (x *EmployeeData) GetNativePlace() string {
	if x != nil {
		return x.NativePlace
	}
	return ""
}

func (x *EmployeeData) GetPoliticId() int64 {
	if x != nil {
		return x.PoliticId
	}
	return 0
}

func (x *EmployeeData) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *EmployeeData) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *EmployeeData) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *EmployeeData) GetDepartmentId() int64 {
	if x != nil {
		return x.DepartmentId
	}
	return 0
}

func (x *EmployeeData) GetJobLevelId() int64 {
	if x != nil {
		return x.JobLevelId
	}
	return 0
}

func (x *EmployeeData) GetPosId() int64 {
	if x != nil {
		return x.PosId
	}
	return 0
}

func (x *EmployeeData) GetEngageForm() string {
	if x != nil {
		return x.EngageForm
	}
	return ""
}

func (x *EmployeeData) GetTiptopDegree() string {
	if x != nil {
		return x.TiptopDegree
	}
	return ""
}

func (x *EmployeeData) GetSpecialty() string {
	if x != nil {
		return x.Specialty
	}
	return ""
}

func (x *EmployeeData) GetSchool() string {
	if x != nil {
		return x.School
	}
	return ""
}

func (x *EmployeeData) GetBeginDate() string {
	if x != nil {
		return x.BeginDate
	}
	return ""
}

func (x *EmployeeData) GetNotWorkDate() string {
	if x != nil {
		return x.NotWorkDate
	}
	return ""
}

func (x *EmployeeData) GetWorkStatus() int32 {
	if x != nil {
		return x.WorkStatus
	}
	return 0
}

func (x *EmployeeData) GetContractTerm() int32 {
	if x != nil {
		return x.ContractTerm
	}
	return 0
}

func (x *EmployeeData) GetConversionTime() string {
	if x != nil {
		return x.ConversionTime
	}
	return ""
}

func (x *EmployeeData) GetBeginContract() string {
	if x != nil {
		return x.BeginContract
	}
	return ""
}

func (x *EmployeeData) GetEndContract() string {
	if x != nil {
		return x.EndContract
	}
	return ""
}

func (x *EmployeeData) GetWorkAge() int32 {
	if x != nil {
		return x.WorkAge
	}
	return 0
}

type EmployeeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*EmployeeData `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *EmployeeReply) Reset() {
	*x = EmployeeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_employee_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmployeeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmployeeReply) ProtoMessage() {}

func (x *EmployeeReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_employee_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmployeeReply.ProtoReflect.Descriptor instead.
func (*EmployeeReply) Descriptor() ([]byte, []int) {
	return file_v1_employee_proto_rawDescGZIP(), []int{3}
}

func (x *EmployeeReply) GetData() []*EmployeeData {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetNationsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nations []string `protobuf:"bytes,1,rep,name=nations,proto3" json:"nations,omitempty"`
}

func (x *GetNationsReply) Reset() {
	*x = GetNationsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_employee_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNationsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNationsReply) ProtoMessage() {}

func (x *GetNationsReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_employee_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNationsReply.ProtoReflect.Descriptor instead.
func (*GetNationsReply) Descriptor() ([]byte, []int) {
	return file_v1_employee_proto_rawDescGZIP(), []int{4}
}

func (x *GetNationsReply) GetNations() []string {
	if x != nil {
		return x.Nations
	}
	return nil
}

type Joblevels struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	TitleLevel string `protobuf:"bytes,3,opt,name=titleLevel,proto3" json:"titleLevel,omitempty"`
	CreateDate string `protobuf:"bytes,4,opt,name=createDate,proto3" json:"createDate,omitempty"`
	Enabled    bool   `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *Joblevels) Reset() {
	*x = Joblevels{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_employee_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Joblevels) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Joblevels) ProtoMessage() {}

func (x *Joblevels) ProtoReflect() protoreflect.Message {
	mi := &file_v1_employee_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Joblevels.ProtoReflect.Descriptor instead.
func (*Joblevels) Descriptor() ([]byte, []int) {
	return file_v1_employee_proto_rawDescGZIP(), []int{5}
}

func (x *Joblevels) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Joblevels) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Joblevels) GetTitleLevel() string {
	if x != nil {
		return x.TitleLevel
	}
	return ""
}

func (x *Joblevels) GetCreateDate() string {
	if x != nil {
		return x.CreateDate
	}
	return ""
}

func (x *Joblevels) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type GetJoblevelsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Joblevels `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetJoblevelsReply) Reset() {
	*x = GetJoblevelsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_employee_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetJoblevelsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJoblevelsReply) ProtoMessage() {}

func (x *GetJoblevelsReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_employee_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJoblevelsReply.ProtoReflect.Descriptor instead.
func (*GetJoblevelsReply) Descriptor() ([]byte, []int) {
	return file_v1_employee_proto_rawDescGZIP(), []int{6}
}

func (x *GetJoblevelsReply) GetData() []*Joblevels {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetPoliticsstatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Politicsstatus []string `protobuf:"bytes,1,rep,name=politicsstatus,proto3" json:"politicsstatus,omitempty"`
}

func (x *GetPoliticsstatusReply) Reset() {
	*x = GetPoliticsstatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_employee_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPoliticsstatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPoliticsstatusReply) ProtoMessage() {}

func (x *GetPoliticsstatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_employee_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPoliticsstatusReply.ProtoReflect.Descriptor instead.
func (*GetPoliticsstatusReply) Descriptor() ([]byte, []int) {
	return file_v1_employee_proto_rawDescGZIP(), []int{7}
}

func (x *GetPoliticsstatusReply) GetPoliticsstatus() []string {
	if x != nil {
		return x.Politicsstatus
	}
	return nil
}

type Department struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ParentId int64  `protobuf:"varint,3,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	DepPath  string `protobuf:"bytes,4,opt,name=dep_path,json=depPath,proto3" json:"dep_path,omitempty"`
	Enabled  bool   `protobuf:"varint,5,opt,name=enabled,proto3" json:"enabled,omitempty"`
	IsParent bool   `protobuf:"varint,6,opt,name=is_parent,json=isParent,proto3" json:"is_parent,omitempty"`
}

func (x *Department) Reset() {
	*x = Department{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_employee_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Department) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Department) ProtoMessage() {}

func (x *Department) ProtoReflect() protoreflect.Message {
	mi := &file_v1_employee_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Department.ProtoReflect.Descriptor instead.
func (*Department) Descriptor() ([]byte, []int) {
	return file_v1_employee_proto_rawDescGZIP(), []int{8}
}

func (x *Department) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Department) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Department) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *Department) GetDepPath() string {
	if x != nil {
		return x.DepPath
	}
	return ""
}

func (x *Department) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Department) GetIsParent() bool {
	if x != nil {
		return x.IsParent
	}
	return false
}

type GetDepsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Department `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetDepsReply) Reset() {
	*x = GetDepsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_employee_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDepsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDepsReply) ProtoMessage() {}

func (x *GetDepsReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_employee_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDepsReply.ProtoReflect.Descriptor instead.
func (*GetDepsReply) Descriptor() ([]byte, []int) {
	return file_v1_employee_proto_rawDescGZIP(), []int{9}
}

func (x *GetDepsReply) GetData() []*Department {
	if x != nil {
		return x.Data
	}
	return nil
}

type Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreateDate string `protobuf:"bytes,3,opt,name=createDate,proto3" json:"createDate,omitempty"`
	Enabled    bool   `protobuf:"varint,4,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *Position) Reset() {
	*x = Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_employee_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_v1_employee_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_v1_employee_proto_rawDescGZIP(), []int{10}
}

func (x *Position) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Position) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Position) GetCreateDate() string {
	if x != nil {
		return x.CreateDate
	}
	return ""
}

func (x *Position) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type GetPositionsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Position `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPositionsReply) Reset() {
	*x = GetPositionsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_employee_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPositionsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPositionsReply) ProtoMessage() {}

func (x *GetPositionsReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_employee_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPositionsReply.ProtoReflect.Descriptor instead.
func (*GetPositionsReply) Descriptor() ([]byte, []int) {
	return file_v1_employee_proto_rawDescGZIP(), []int{11}
}

func (x *GetPositionsReply) GetData() []*Position {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetMaxWorkIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxWorkId string `protobuf:"bytes,1,opt,name=max_work_id,json=maxWorkId,proto3" json:"max_work_id,omitempty"`
}

func (x *GetMaxWorkIDReply) Reset() {
	*x = GetMaxWorkIDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_employee_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMaxWorkIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMaxWorkIDReply) ProtoMessage() {}

func (x *GetMaxWorkIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_employee_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMaxWorkIDReply.ProtoReflect.Descriptor instead.
func (*GetMaxWorkIDReply) Descriptor() ([]byte, []int) {
	return file_v1_employee_proto_rawDescGZIP(), []int{12}
}

func (x *GetMaxWorkIDReply) GetMaxWorkId() string {
	if x != nil {
		return x.MaxWorkId
	}
	return ""
}

type GetExportReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Export string `protobuf:"bytes,1,opt,name=export,proto3" json:"export,omitempty"`
}

func (x *GetExportReply) Reset() {
	*x = GetExportReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_employee_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExportReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExportReply) ProtoMessage() {}

func (x *GetExportReply) ProtoReflect() protoreflect.Message {
	mi := &file_v1_employee_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExportReply.ProtoReflect.Descriptor instead.
func (*GetExportReply) Descriptor() ([]byte, []int) {
	return file_v1_employee_proto_rawDescGZIP(), []int{13}
}

func (x *GetExportReply) GetExport() string {
	if x != nil {
		return x.Export
	}
	return ""
}

var File_v1_employee_proto protoreflect.FileDescriptor

var file_v1_employee_proto_rawDesc = []byte{
	0x0a, 0x11, 0x76, 0x31, 0x2f, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x13, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x11, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xb7, 0x02, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x74, 0x69, 0x63, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x74, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6a, 0x6f, 0x62, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6a, 0x6f,
	0x62, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x49,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x49, 0x64, 0x12, 0x1e,
	0x0a, 0x0a, 0x65, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x65, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x22,
	0x0a, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x53,
	0x63, 0x6f, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x65, 0x67, 0x69,
	0x6e, 0x44, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x87, 0x07, 0x0a, 0x0c, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65,
	0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69,
	0x64, 0x43, 0x61, 0x72, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x64, 0x5f, 0x63, 0x61, 0x72, 0x64,
	0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x69, 0x64, 0x43, 0x61, 0x72, 0x64, 0x50, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x77, 0x65, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x77, 0x65, 0x64, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70,
	0x6c, 0x61, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f, 0x6c, 0x69, 0x74,
	0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x6f, 0x6c,
	0x69, 0x74, 0x69, 0x63, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6a, 0x6f, 0x62, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6a, 0x6f, 0x62, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x6f, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x6f, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e,
	0x67, 0x61, 0x67, 0x65, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x65, 0x6e, 0x67, 0x61, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x74,
	0x69, 0x70, 0x74, 0x6f, 0x70, 0x5f, 0x64, 0x65, 0x67, 0x72, 0x65, 0x65, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x74, 0x69, 0x70, 0x74, 0x6f, 0x70, 0x44, 0x65, 0x67, 0x72, 0x65, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x74, 0x79, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x74, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69,
	0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x5f, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6e, 0x6f,
	0x74, 0x57, 0x6f, 0x72, 0x6b, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x77, 0x6f, 0x72,
	0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x77, 0x6f, 0x72, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x65, 0x72, 0x6d, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x54, 0x65, 0x72, 0x6d, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x65, 0x67, 0x69,
	0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12,
	0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x77, 0x6f, 0x72, 0x6b, 0x41, 0x67, 0x65, 0x22, 0x46, 0x0a,
	0x0d, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x35,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x77, 0x65, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x2b, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x47,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x2e, 0x77, 0x65, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x73, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x40, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x6c, 0x69, 0x74, 0x69, 0x63, 0x73, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x6f, 0x6c, 0x69, 0x74, 0x69, 0x63, 0x73, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x6f, 0x6c, 0x69, 0x74,
	0x69, 0x63, 0x73, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x0a, 0x44, 0x65,
	0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x70,
	0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x70,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x22, 0x43, 0x0a, 0x0c, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x33, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x70, 0x61, 0x72, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x68, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x46, 0x0a, 0x11, 0x47, 0x65,
	0x74, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x77, 0x65, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0x33, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x57, 0x6f, 0x72, 0x6b,
	0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1e, 0x0a, 0x0b, 0x6d, 0x61, 0x78, 0x5f, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x61,
	0x78, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x78, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x78, 0x70, 0x6f, 0x72,
	0x74, 0x32, 0x88, 0x08, 0x0a, 0x08, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x12, 0x70,
	0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x72, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x77, 0x65, 0x62, 0x2e,
	0x76, 0x31, 0x2e, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x69, 0x63,
	0x12, 0x7d, 0x0a, 0x07, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64,
	0x2e, 0x77, 0x65, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12,
	0x1e, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x65, 0x2f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2f, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x83, 0x01, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x12, 0x24, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x77, 0x65, 0x62,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4a, 0x6f, 0x62,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x28, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2f, 0x6a, 0x6f, 0x62, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x73, 0x12, 0x92, 0x01, 0x0a, 0x0e, 0x50, 0x6f, 0x6c, 0x69, 0x74, 0x69,
	0x63, 0x73, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x77, 0x65,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f, 0x6c, 0x69, 0x74, 0x69, 0x63, 0x73,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2d, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x27, 0x12, 0x25, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2f, 0x70, 0x6f, 0x6c, 0x69,
	0x74, 0x69, 0x63, 0x73, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x74, 0x0a, 0x04, 0x44, 0x65,
	0x70, 0x73, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x64, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66,
	0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x44, 0x65, 0x70, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2f, 0x64, 0x65, 0x70, 0x73,
	0x12, 0x83, 0x01, 0x0a, 0x09, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x77, 0x65,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x28, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2f, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x7c, 0x0a, 0x09, 0x4d, 0x61, 0x78, 0x57, 0x6f, 0x72,
	0x6b, 0x49, 0x44, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x61, 0x78, 0x57, 0x6f, 0x72, 0x6b, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12, 0x19, 0x2f, 0x65, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x2f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x2f, 0x6d, 0x61, 0x78, 0x57, 0x6f,
	0x72, 0x6b, 0x49, 0x44, 0x12, 0x76, 0x0a, 0x06, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x24,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x64, 0x2e, 0x77, 0x65,
	0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x72, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x64, 0x2e, 0x77, 0x65, 0x62, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78,
	0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x2f,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x2f, 0x65, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x42, 0x1e, 0x5a, 0x1c,
	0x76, 0x68, 0x72, 0x67, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x64, 0x2f, 0x77, 0x65, 0x62, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_v1_employee_proto_rawDescOnce sync.Once
	file_v1_employee_proto_rawDescData = file_v1_employee_proto_rawDesc
)

func file_v1_employee_proto_rawDescGZIP() []byte {
	file_v1_employee_proto_rawDescOnce.Do(func() {
		file_v1_employee_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_employee_proto_rawDescData)
	})
	return file_v1_employee_proto_rawDescData
}

var file_v1_employee_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_v1_employee_proto_goTypes = []interface{}{
	(*GetEmptyRequest)(nil),        // 0: api.frontend.web.v1.GetEmptyRequest
	(*GetBasicRequest)(nil),        // 1: api.frontend.web.v1.GetBasicRequest
	(*EmployeeData)(nil),           // 2: api.frontend.web.v1.EmployeeData
	(*EmployeeReply)(nil),          // 3: api.frontend.web.v1.EmployeeReply
	(*GetNationsReply)(nil),        // 4: api.frontend.web.v1.GetNationsReply
	(*Joblevels)(nil),              // 5: api.frontend.web.v1.Joblevels
	(*GetJoblevelsReply)(nil),      // 6: api.frontend.web.v1.GetJoblevelsReply
	(*GetPoliticsstatusReply)(nil), // 7: api.frontend.web.v1.GetPoliticsstatusReply
	(*Department)(nil),             // 8: api.frontend.web.v1.Department
	(*GetDepsReply)(nil),           // 9: api.frontend.web.v1.GetDepsReply
	(*Position)(nil),               // 10: api.frontend.web.v1.Position
	(*GetPositionsReply)(nil),      // 11: api.frontend.web.v1.GetPositionsReply
	(*GetMaxWorkIDReply)(nil),      // 12: api.frontend.web.v1.GetMaxWorkIDReply
	(*GetExportReply)(nil),         // 13: api.frontend.web.v1.GetExportReply
}
var file_v1_employee_proto_depIdxs = []int32{
	2,  // 0: api.frontend.web.v1.EmployeeReply.data:type_name -> api.frontend.web.v1.EmployeeData
	5,  // 1: api.frontend.web.v1.GetJoblevelsReply.data:type_name -> api.frontend.web.v1.Joblevels
	8,  // 2: api.frontend.web.v1.GetDepsReply.data:type_name -> api.frontend.web.v1.Department
	10, // 3: api.frontend.web.v1.GetPositionsReply.data:type_name -> api.frontend.web.v1.Position
	1,  // 4: api.frontend.web.v1.Employee.List:input_type -> api.frontend.web.v1.GetBasicRequest
	0,  // 5: api.frontend.web.v1.Employee.Nations:input_type -> api.frontend.web.v1.GetEmptyRequest
	0,  // 6: api.frontend.web.v1.Employee.Joblevels:input_type -> api.frontend.web.v1.GetEmptyRequest
	0,  // 7: api.frontend.web.v1.Employee.Politicsstatus:input_type -> api.frontend.web.v1.GetEmptyRequest
	0,  // 8: api.frontend.web.v1.Employee.Deps:input_type -> api.frontend.web.v1.GetEmptyRequest
	0,  // 9: api.frontend.web.v1.Employee.Positions:input_type -> api.frontend.web.v1.GetEmptyRequest
	0,  // 10: api.frontend.web.v1.Employee.MaxWorkID:input_type -> api.frontend.web.v1.GetEmptyRequest
	0,  // 11: api.frontend.web.v1.Employee.Export:input_type -> api.frontend.web.v1.GetEmptyRequest
	3,  // 12: api.frontend.web.v1.Employee.List:output_type -> api.frontend.web.v1.EmployeeReply
	4,  // 13: api.frontend.web.v1.Employee.Nations:output_type -> api.frontend.web.v1.GetNationsReply
	6,  // 14: api.frontend.web.v1.Employee.Joblevels:output_type -> api.frontend.web.v1.GetJoblevelsReply
	7,  // 15: api.frontend.web.v1.Employee.Politicsstatus:output_type -> api.frontend.web.v1.GetPoliticsstatusReply
	9,  // 16: api.frontend.web.v1.Employee.Deps:output_type -> api.frontend.web.v1.GetDepsReply
	11, // 17: api.frontend.web.v1.Employee.Positions:output_type -> api.frontend.web.v1.GetPositionsReply
	12, // 18: api.frontend.web.v1.Employee.MaxWorkID:output_type -> api.frontend.web.v1.GetMaxWorkIDReply
	13, // 19: api.frontend.web.v1.Employee.Export:output_type -> api.frontend.web.v1.GetExportReply
	12, // [12:20] is the sub-list for method output_type
	4,  // [4:12] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_v1_employee_proto_init() }
func file_v1_employee_proto_init() {
	if File_v1_employee_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_employee_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEmptyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_employee_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBasicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_employee_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmployeeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_employee_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmployeeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_employee_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNationsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_employee_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Joblevels); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_employee_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetJoblevelsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_employee_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPoliticsstatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_employee_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Department); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_employee_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDepsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_employee_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_employee_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPositionsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_employee_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMaxWorkIDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_employee_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExportReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_v1_employee_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_employee_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_v1_employee_proto_goTypes,
		DependencyIndexes: file_v1_employee_proto_depIdxs,
		MessageInfos:      file_v1_employee_proto_msgTypes,
	}.Build()
	File_v1_employee_proto = out.File
	file_v1_employee_proto_rawDesc = nil
	file_v1_employee_proto_goTypes = nil
	file_v1_employee_proto_depIdxs = nil
}
